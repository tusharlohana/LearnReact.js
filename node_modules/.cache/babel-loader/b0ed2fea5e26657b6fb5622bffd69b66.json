{"ast":null,"code":"var _jsxFileName = \"/home/spidey/project2/src/Hooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n// useState(value , function)\n// useEffect(function , Array)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useHooks = () => {\n  _s();\n\n  // const VarName = useState(\"tusharr\")\n  // const name =  VarName[0]\n  // const setName = VarName[1]\n  // const [ name , setName ] = useState(\"tusharlohana\")\n  //   const click =()=>{\n  //       setName(\"ayushi\")\n  //   }  \n  // ----> useState( ) : current value  (name) , function ()\n  //  useState(Cval, fun())\n  const [count, setCount] = useState(0); // const [count1 , setCount1] = useState(20)\n\n  const incriment = () => {\n    setCount(count + 1);\n  }; // const decriment =()=>{\n  //     setCount1(count1 - 1 )\n  // }\n  // useEffect( \n  //     ()=>{\n  //         console.log(\"effect is called\")\n  //     } )\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(count, incriment), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incriment,\n      children: \"incriment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(useHooks, \"aEy7UJVTFhCoeG8i5kakn9vy8b4=\");\n\nexport default useHooks;","map":{"version":3,"sources":["/home/spidey/project2/src/Hooks.jsx"],"names":["React","useState","useEffect","useHooks","count","setCount","incriment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AAEA;AACA;;;;;AAEA,MAAMC,QAAQ,GAAE,MAAI;AAAA;;AAEhB;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBJ,QAAQ,CAAC,CAAD,CAAnC,CAhBgB,CAiBhB;;AAEA,QAAMK,SAAS,GAAE,MAAI;AACbD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFL,CAnBgB,CAuBZ;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEJ,sBACI;AAAA,gBAEIA,KAAK,EAACE,SAFV,gBAQA;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBADJ;AAeH,CA/CD;;GAAMH,Q;;AAgDN,eAAeA,QAAf","sourcesContent":["import React,{ useState , useEffect } from 'react';\n\n//  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n\n// useState(value , function)\n// useEffect(function , Array)\n\nconst useHooks =()=>{\n\n    // const VarName = useState(\"tusharr\")\n    // const name =  VarName[0]\n    // const setName = VarName[1]\n\n    // const [ name , setName ] = useState(\"tusharlohana\")\n\n    //   const click =()=>{\n    //       setName(\"ayushi\")\n    //   }  \n\n\n    // ----> useState( ) : current value  (name) , function ()\n    //  useState(Cval, fun())\n\n    const [count , setCount] = useState(0)\n    // const [count1 , setCount1] = useState(20)\n        \n    const incriment =()=>{\n            setCount(count + 1 )\n        }\n        \n        // const decriment =()=>{\n        //     setCount1(count1 - 1 )\n        // }\n\n        // useEffect( \n        //     ()=>{\n        //         console.log(\"effect is called\")\n        //     } )\n\n    return(\n        <>\n        {\n            count,incriment\n        }\n        {/* <h1>my name is {name}</h1>\n        <button onClick={click} >click to change name</button> */}\n       \n        {/* <h1>the count is { count1 }</h1> */}\n        <button onClick={incriment}>incriment</button>\n        {/* <button onClick={decriment}>decriment</button> */}\n        \n        </>\n    )\n\n}\nexport default useHooks"]},"metadata":{},"sourceType":"module"}