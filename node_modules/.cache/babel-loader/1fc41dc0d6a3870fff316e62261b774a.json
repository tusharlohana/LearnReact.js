{"ast":null,"code":"var _jsxFileName = \"/home/spidey/project2/src/Hooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n// useState(value , function)\n// useEffect(function , Array)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Hooks = () => {\n  _s();\n\n  // const VarName = useState(\"tusharr\")\n  // const name =  VarName[0]\n  // const setName = VarName[1]\n  // const [ name , setName ] = useState(\"tusharlohana\")\n  //   const click =()=>{\n  //       setName(\"ayushi\")\n  //   }  \n  // ----> useState( ) : current value  (name) , function ()\n  //  useState(Cval, fun())\n  const [count, setCount] = useState(0);\n\n  const incriment = () => {\n    setCount(count + 1);\n  };\n\n  const decriment = () => {\n    setCount(count - 1);\n  };\n\n  useEffect(() => {\n    console.log(\"effect is called\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"the count is \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incriment,\n      children: \"incriment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decriment,\n      children: \"incriment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Hooks, \"OAynOF3Rh1q0Hnjqu9B+HXdGJiw=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"sources":["/home/spidey/project2/src/Hooks.jsx"],"names":["React","useState","useEffect","Hooks","count","setCount","incriment","decriment","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AAEA;AACA;;;;;AAEA,MAAMC,KAAK,GAAE,MAAI;AAAA;;AAEb;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBJ,QAAQ,CAAC,CAAD,CAAnC;;AAEA,QAAMK,SAAS,GAAE,MAAI;AACbD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFL;;AAII,QAAMG,SAAS,GAAE,MAAI;AACjBF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAIAF,EAAAA,SAAS,CACL,MAAI;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAHI,CAAT;AAKJ,sBACI;AAAA,4BAIA;AAAA,kCAAmBL,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAYH,CA3CD;;GAAMJ,K;;KAAAA,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React,{ useState , useEffect } from 'react';\n\n//  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n\n// useState(value , function)\n// useEffect(function , Array)\n\nconst Hooks =()=>{\n\n    // const VarName = useState(\"tusharr\")\n    // const name =  VarName[0]\n    // const setName = VarName[1]\n\n    // const [ name , setName ] = useState(\"tusharlohana\")\n\n    //   const click =()=>{\n    //       setName(\"ayushi\")\n    //   }  \n\n\n    // ----> useState( ) : current value  (name) , function ()\n    //  useState(Cval, fun())\n\n    const [count , setCount] = useState(0)\n        \n    const incriment =()=>{\n            setCount(count + 1 )\n        }\n        \n        const decriment =()=>{\n            setCount(count - 1 )\n        }\n\n        useEffect( \n            ()=>{\n                console.log(\"effect is called\")\n            } )\n\n    return(\n        <>\n        {/* <h1>my name is {name}</h1>\n        <button onClick={click} >click to change name</button> */}\n\n        <h1>the count is { count }</h1>\n        <button onClick={incriment}>incriment</button>\n        <button onClick={decriment}>incriment</button>\n        \n        </>\n    )\n\n}\nexport default Hooks"]},"metadata":{},"sourceType":"module"}