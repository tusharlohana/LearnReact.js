{"ast":null,"code":"var _jsxFileName = \"/home/spidey/project2/src/List.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arr = [{\n  id: 101,\n  name: \"tushar\"\n}, {\n  id: 102,\n  name: \" ritik\"\n}];\nconst newArr = arr.map(num => {\n  console.log(\"num is:\", num);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: num * 20\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n});\nexport const List = () => {\n  console.log(\"oldarr :\", arr);\n  console.log(\"newarray :\", newArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/spidey/project2/src/List.jsx"],"names":["React","ReactDOM","arr","id","name","newArr","map","num","console","log","List","n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,EAAE,EAAG,GAAN;AAAYC,EAAAA,IAAI,EAAG;AAAnB,CAAD,EACA;AAAED,EAAAA,EAAE,EAAG,GAAP;AAAaC,EAAAA,IAAI,EAAG;AAApB,CADA,CAAZ;AAGA,MAAMC,MAAM,GAAGH,GAAG,CAACI,GAAJ,CAASC,GAAD,IAAS;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAwBF,GAAxB;AACA,sBAAO;AAAA,cAAMA,GAAG,GAAG;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHc,CAAf;AAKA,OAAO,MAAMG,IAAI,GAAG,MAAM;AACtBF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAyBP,GAAzB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAA1B;AACA,sBACI;AAAA,2BACI;AAAA,gBACKM;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZM;KAAMD,I;AAab,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst arr = [{id : 101 , name : \"tushar\"},\n            { id : 102 , name : \" ritik\"}]\n\nconst newArr = arr.map((num) => {\n    console.log(\"num is:\" , num)\n    return <li >{num * 20}</li>\n})\n\nexport const List = () => {\n    console.log(\"oldarr :\" , arr)\n    console.log(\"newarray :\", newArr)\n    return (\n        <div>\n            <ul>\n                {n}\n            </ul>\n\n            \n        </div>\n    )\n}\nexport default List\n"]},"metadata":{},"sourceType":"module"}