{"ast":null,"code":"var _jsxFileName = \"/home/spidey/project2/src/Hooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n// useState(value , function)\n// useEffect(function , Array)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Hooks = () => {\n  _s();\n\n  // const VarName = useState(\"tusharr\")\n  // const name =  VarName[0]\n  // const setName = VarName[1]\n  // const [ name , setName ] = useState(\"tusharlohana\")\n  //   const click =()=>{\n  //       setName(\"ayushi\")\n  //   }  \n  // ----> useState( ) : current value  (name) , function ()\n  //  useState(Cval, fun())\n  const [count, setCount] = useState(0);\n  setCount(cou);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"the count is \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Hooks, \"aEy7UJVTFhCoeG8i5kakn9vy8b4=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"sources":["/home/spidey/project2/src/Hooks.jsx"],"names":["React","useState","Hooks","count","setCount","cou"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B,C,CAEA;AAEA;AACA;;;;;AAEA,MAAMC,KAAK,GAAE,MAAI;AAAA;;AAEb;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBH,QAAQ,CAAC,CAAD,CAAnC;AACIG,EAAAA,QAAQ,CAACC,GAAD,CAAR;AAEJ,sBACI;AAAA,2BAIA;AAAA,kCAAmBF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA,mBADJ;AAUH,CA7BD;;GAAMD,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React,{ useState } from 'react';\n\n//  useEffect() ---> componentDidMount , componentDidUpdate , componentWillUnmount\n\n// useState(value , function)\n// useEffect(function , Array)\n\nconst Hooks =()=>{\n\n    // const VarName = useState(\"tusharr\")\n    // const name =  VarName[0]\n    // const setName = VarName[1]\n\n    // const [ name , setName ] = useState(\"tusharlohana\")\n\n    //   const click =()=>{\n    //       setName(\"ayushi\")\n    //   }  \n\n\n    // ----> useState( ) : current value  (name) , function ()\n    //  useState(Cval, fun())\n\n    const [count , setCount] = useState(0)\n        setCount(cou)\n\n    return(\n        <>\n        {/* <h1>my name is {name}</h1>\n        <button onClick={click} >click to change name</button> */}\n\n        <h1>the count is { count }</h1>\n        \n        </>\n    )\n\n}\nexport default Hooks"]},"metadata":{},"sourceType":"module"}